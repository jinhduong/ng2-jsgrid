var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.521,1,0.652]],["body/components/AppComponent.html",[0,0.868,1,1.086,2,0.425,3,0.425,4,1.466,5,1.466,6,0.245,7,1.18,8,1.18,9,1.896,10,2.114,11,1.701,12,0.675,13,0.076,14,1.701,15,1.701,16,1.393,17,1.393,18,0.476,19,1.466,20,1.466,21,0.766,22,1.18,23,1.18,24,0.476,25,0.795,26,0.795,27,0.653,28,1.466,29,0.795,30,2.114,31,2.114,32,0.766,33,2.714,34,1.466,35,1.345,36,1.466,37,0.653,38,1.466,39,0.766,40,1.466,41,0.045,42,0.045]],["title/modules/AppModule.html",[27,0.801,43,0.652]],["body/modules/AppModule.html",[0,0.6,1,1.207,2,0.413,3,0.413,6,0.238,7,1.148,9,0.94,10,1.427,11,1.148,12,0.69,13,0.076,14,1.668,15,1.668,16,1.366,17,1.366,18,0.467,19,1.427,20,1.427,21,1.076,22,1.148,23,1.148,24,0.467,25,1.324,26,1.324,27,1.426,28,1.427,29,0.774,41,0.044,42,0.044,43,0.751,44,1.148,45,0.94,46,0.321,47,1.427,48,1.427,49,1.427,50,1.427,51,1.668,52,1.148,53,1.148,54,1.85,55,1.85]],["title/components/SampleComponent.html",[0,0.521,37,0.801]],["body/components/SampleComponent.html",[0,0.985,1,0.609,2,0.487,3,0.487,4,1.68,5,1.68,6,0.281,8,1.352,9,1.996,11,1.874,12,0.378,13,0.073,18,0.378,24,0.378,29,0.911,30,2.329,31,2.329,32,0.844,33,2.885,34,1.68,35,1.449,36,1.68,37,1.285,38,3.134,39,0.844,40,1.68,41,0.049,42,0.049,46,0.378,56,1.68,57,1.449,58,0.911,59,2.179]],["title/directives/SampleDirective.html",[32,0.652,39,0.652]],["body/directives/SampleDirective.html",[2,0.592,3,0.592,6,0.341,8,1.645,9,1.75,12,0.46,13,0.074,18,0.46,24,0.46,32,1.069,35,1.108,39,1.131,41,0.056,42,0.056,46,0.46,57,1.108,58,1.108,60,2.044,61,2.65,62,4.049,63,2.65,64,1.645,65,1.347,66,1.645,67,3.443,68,2.65]],["title/modules/SampleModule.html",[21,0.652,43,0.652]],["body/modules/SampleModule.html",[2,0.378,3,0.378,6,0.218,12,0.671,13,0.076,17,1.527,18,0.294,21,1.171,24,0.294,25,0.708,26,1.257,29,0.708,37,1.457,39,1.185,41,0.041,42,0.041,43,0.703,44,1.05,45,1.279,46,0.689,51,1.562,52,1.05,53,1.05,69,1.305,70,1.305,71,1.305,72,1.692,73,2.517,74,2.517,75,1.692,76,2.517,77,2.517,78,1.033,79,2.517,80,1.279,81,2.517,82,1.692,83,1.692,84,0.86]],["title/injectables/SamplePipe.html",[78,0.801,85,0.521]],["body/injectables/SamplePipe.html",[2,0.505,3,0.505,6,0.291,12,0.393,13,0.074,18,0.393,24,0.393,35,1.296,41,0.05,42,0.05,46,0.393,57,0.946,58,0.946,64,1.404,65,1.149,66,1.404,78,1.214,84,1.574,85,0.789,86,1.404,87,1.744,88,2.931,89,2.389,90,2.47,91,1.149,92,2.389,93,1.744,94,2.389,95,2.725,96,1.744,97,1.404,98,1.923,99,2.389,100,2.389,101,1.923,102,1.744]],["title/injectables/SamplePipe-1.html",[78,0.672,85,0.437,103,1.51]],["body/injectables/SamplePipe-1.html",[2,0.505,3,0.505,6,0.291,12,0.393,13,0.074,18,0.393,24,0.393,35,1.296,41,0.05,42,0.05,46,0.393,57,0.946,58,0.946,64,1.404,65,1.149,66,1.404,78,1.214,84,1.574,85,0.789,86,1.404,87,1.744,88,2.931,89,2.389,90,2.47,91,1.149,92,2.389,93,1.744,94,2.389,95,2.725,96,1.744,97,1.404,98,1.923,99,2.389,100,2.389,101,1.923,102,1.744]],["title/injectables/SampleService.html",[80,1.185,85,0.521]],["body/injectables/SampleService.html",[2,0.664,3,0.664,6,0.383,12,0.516,13,0.074,18,0.516,24,0.516,41,0.06,42,0.06,46,0.516,57,1.688,58,1.243,80,1.882,85,0.901,104,2.292,105,2.971]],["title/coverage.html",[106,2.44]],["body/coverage.html",[0,0.733,1,0.688,6,0.317,7,1.528,13,0.072,32,0.688,37,0.846,39,0.688,41,0.053,42,0.053,56,1.899,60,1.899,65,1.251,78,1.127,80,1.251,85,0.824,86,2.036,104,1.899,106,1.899,107,2.462,108,2.462,109,2.462,110,4.098,111,3.28,112,1.899,113,1.899,114,1.899,115,1.528,116,1.899,117,3.689,118,3.28,119,3.28,120,2.462,121,2.462,122,2.462]],["title/index.html",[91,0.995,123,1.957,124,1.957]],["body/index.html",[0,0.417,1,0.889,6,0.348,12,0.722,13,0.075,14,1.679,15,1.158,16,0.948,17,1.375,18,0.324,21,0.522,22,2.166,23,1.975,24,0.324,25,0.781,26,0.781,27,0.929,32,0.522,41,0.044,42,0.044,45,0.948,46,0.324,101,1.158,125,3.49,126,3.985,127,3.49,128,3.704,129,1.866,130,2.705,131,1.866,132,3.182,133,2.705,134,1.866,135,1.866,136,1.866,137,1.866,138,1.866,139,1.866,140,1.866,141,1.866,142,1.866,143,1.866,144,1.866,145,1.866,146,1.866,147,1.866,148,1.866,149,1.866,150,1.866]],["title/modules.html",[43,0.884]],["body/modules.html",[13,0.064,16,1.997,21,0.915,27,1.125,41,0.064,42,0.064,43,0.915,151,3.93,152,3.93,153,3.93]],["title/overview.html",[154,2.44]],["body/overview.html",[0,0.497,1,1.171,13,0.071,21,1.211,25,0.931,26,0.931,27,1.44,29,0.931,32,0.622,37,1.44,39,1.171,41,0.05,42,0.05,43,0.856,44,1.381,45,1.131,46,0.386,47,1.716,48,1.716,49,1.716,50,1.716,51,1.901,52,1.381,53,1.381,69,1.716,70,1.716,71,1.716,85,0.497,103,1.716,154,1.716,155,3.063,156,2.225]],["title/miscellaneous/variables.html",[115,1.738,157,1.51]],["body/miscellaneous/variables.html",[13,0.077,41,0.053,42,0.053,84,1.244,90,2.283,91,1.244,97,1.519,98,1.519,112,1.888,113,2.52,114,2.52,115,1.519,116,2.837,157,1.888,158,2.448,159,3.678,160,2.448,161,3.925,162,3.678,163,2.448,164,2.448,165,2.448,166,2.448]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":110,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":111,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":117,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":103,"title":{"injectables/SamplePipe-1.html":{}},"body":{"overview.html":{}}}],["1/3",{"_index":119,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":155,"title":{},"body":{"overview.html":{}}}],["3",{"_index":156,"title":{},"body":{"overview.html":{}}}],["33",{"_index":118,"title":{},"body":{"coverage.html":{}}}],["actual_compon",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{}}}],["angular",{"_index":132,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":75,"title":{},"body":{"modules/SampleModule.html":{}}}],["angular/cor",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{},"index.html":{}}}],["angular/platform",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["app",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["app'},{'nam",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{}}}],["app.compon",{"_index":135,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["applic",{"_index":133,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":27,"title":{"modules/AppModule.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["arg",{"_index":95,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["bootstrap",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SampleModule.html":{},"index.html":{},"overview.html":{}}}],["brows",{"_index":153,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["browsermodul",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["buildto",{"_index":145,"title":{},"body":{"index.html":{}}}],["class",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{},"index.html":{}}}],["clear",{"_index":166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_samplemodul",{"_index":69,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["cluster_samplemodule_declar",{"_index":70,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["cluster_samplemodule_export",{"_index":71,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["commonmodul",{"_index":74,"title":{},"body":{"modules/SampleModule.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/SampleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{}}}],["constructor",{"_index":57,"title":{},"body":{"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{}}}],["constructor(el",{"_index":61,"title":{},"body":{"directives/SampleDirective.html":{}}}],["constructor(priv",{"_index":68,"title":{},"body":{"directives/SampleDirective.html":{}}}],["coverag",{"_index":106,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["d.t",{"_index":143,"title":{},"body":{"index.html":{}}}],["declar",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SampleModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":97,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":58,"title":{},"body":{"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{}}}],["delet",{"_index":165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["depend",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/SampleModule.html":{},"overview.html":{}}}],["descript",{"_index":87,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["develop",{"_index":140,"title":{},"body":{"index.html":{}}}],["direct",{"_index":32,"title":{"directives/SampleDirective.html":{}},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["document",{"_index":107,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{}}}],["dynam",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["el",{"_index":67,"title":{},"body":{"directives/SampleDirective.html":{}}}],["element",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{}}}],["elementref",{"_index":62,"title":{},"body":{"directives/SampleDirective.html":{}}}],["export",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{},"index.html":{},"overview.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{},"coverage.html":{},"index.html":{}}}],["forroot",{"_index":83,"title":{},"body":{"modules/SampleModule.html":{}}}],["gener",{"_index":141,"title":{},"body":{"index.html":{}}}],["get",{"_index":123,"title":{"index.html":{}},"body":{}}],["getitem",{"_index":160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{}}}],["identifi",{"_index":108,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":102,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["import",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{},"index.html":{}}}],["index",{"_index":91,"title":{"index.html":{}},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{}}}],["inject",{"_index":85,"title":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{}},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":89,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["instal",{"_index":125,"title":{},"body":{"index.html":{}}}],["jinhduong",{"_index":150,"title":{},"body":{"index.html":{}}}],["js",{"_index":142,"title":{},"body":{"index.html":{}}}],["jsgrid",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["jsgridand",{"_index":134,"title":{},"body":{"index.html":{}}}],["key",{"_index":161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"overview.html":{}}}],["librari",{"_index":126,"title":{},"body":{"index.html":{}}}],["librarymodul",{"_index":137,"title":{},"body":{"index.html":{}}}],["lint",{"_index":146,"title":{},"body":{"index.html":{}}}],["lintlicens",{"_index":148,"title":{},"body":{"index.html":{}}}],["local",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{}}}],["metadata.json",{"_index":144,"title":{},"body":{"index.html":{}}}],["method",{"_index":92,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["miscellan",{"_index":157,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":149,"title":{},"body":{"index.html":{}}}],["mock",{"_index":116,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocks.t",{"_index":114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modul",{"_index":43,"title":{"modules/AppModule.html":{},"modules/SampleModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/SampleModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":73,"title":{},"body":{"modules/SampleModule.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["new",{"_index":120,"title":{},"body":{"coverage.html":{}}}],["ng2",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["ngmodul",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SampleModule.html":{},"index.html":{}}}],["npm",{"_index":128,"title":{},"body":{"index.html":{}}}],["null",{"_index":98,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":93,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["onc",{"_index":130,"title":{},"body":{"index.html":{}}}],["option",{"_index":66,"title":{},"body":{"directives/SampleDirective.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["out",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/SampleModule.html":{},"overview.html":{}}}],["overview",{"_index":154,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["paramet",{"_index":64,"title":{},"body":{"directives/SampleDirective.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["pipe",{"_index":101,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"index.html":{}}}],["pipetransform",{"_index":100,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["platformbrowserdynam",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["platformbrowserdynamic().bootstrapmodule(appmodul",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["playground/index.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["provid",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/SampleModule.html":{},"index.html":{},"overview.html":{}}}],["publish",{"_index":131,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/SampleModule.html":{},"overview.html":{}}}],["result",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":84,"title":{},"body":{"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":127,"title":{},"body":{"index.html":{}}}],["sampl",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{}}}],["sample.compon",{"_index":76,"title":{},"body":{"modules/SampleModule.html":{}}}],["sample.direct",{"_index":77,"title":{},"body":{"modules/SampleModule.html":{}}}],["sample.pip",{"_index":79,"title":{},"body":{"modules/SampleModule.html":{}}}],["sample.servic",{"_index":81,"title":{},"body":{"modules/SampleModule.html":{}}}],["samplecompon",{"_index":37,"title":{"components/SampleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"coverage.html":{},"overview.html":{}}}],["sampledirect",{"_index":39,"title":{"directives/SampleDirective.html":{}},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"modules/SampleModule.html":{},"coverage.html":{},"overview.html":{}}}],["samplemodul",{"_index":21,"title":{"modules/SampleModule.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SampleModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["samplepip",{"_index":78,"title":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}},"body":{"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"coverage.html":{}}}],["sampleservic",{"_index":80,"title":{"injectables/SampleService.html":{}},"body":{"modules/SampleModule.html":{},"injectables/SampleService.html":{},"coverage.html":{}}}],["saveconsum",{"_index":129,"title":{},"body":{"index.html":{}}}],["selector",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{}}}],["setitem",{"_index":163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{},"directives/SampleDirective.html":{},"modules/SampleModule.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"injectables/SampleService.html":{}}}],["specifi",{"_index":136,"title":{},"body":{"index.html":{}}}],["src/.../jest",{"_index":158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/index.t",{"_index":72,"title":{},"body":{"modules/SampleModule.html":{}}}],["src/jest",{"_index":112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sample.component.t",{"_index":56,"title":{},"body":{"components/SampleComponent.html":{},"coverage.html":{}}}],["src/sample.component.ts:7",{"_index":59,"title":{},"body":{"components/SampleComponent.html":{}}}],["src/sample.directive.t",{"_index":60,"title":{},"body":{"directives/SampleDirective.html":{},"coverage.html":{}}}],["src/sample.directive.ts:6",{"_index":63,"title":{},"body":{"directives/SampleDirective.html":{}}}],["src/sample.pipe.t",{"_index":86,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"coverage.html":{}}}],["src/sample.pipe.ts:11",{"_index":96,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["src/sample.service.t",{"_index":104,"title":{},"body":{"injectables/SampleService.html":{},"coverage.html":{}}}],["src/sample.service.ts:4",{"_index":105,"title":{},"body":{"injectables/SampleService.html":{}}}],["start",{"_index":124,"title":{"index.html":{}},"body":{}}],["statement",{"_index":109,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":82,"title":{},"body":{"modules/SampleModule.html":{}}}],["storag",{"_index":159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage[key",{"_index":162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":99,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["support",{"_index":151,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":152,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":122,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":121,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SampleComponent.html":{}}}],["test",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["titl",{"_index":139,"title":{},"body":{"index.html":{}}}],["transform",{"_index":88,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["transform(valu",{"_index":94,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{}}}],["ts",{"_index":147,"title":{},"body":{"index.html":{}}}],["type",{"_index":65,"title":{},"body":{"directives/SampleDirective.html":{},"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"coverage.html":{}}}],["us",{"_index":138,"title":{},"body":{"index.html":{}}}],["valu",{"_index":90,"title":{},"body":{"injectables/SamplePipe.html":{},"injectables/SamplePipe-1.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/SampleComponent.html":{}}}],["variabl",{"_index":115,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/SampleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    playground/index.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { SampleModule }  from 'ng2-jsgrid';\n\n@Component({\n  selector: 'app',\n  template: ``\n})\nclass AppComponent {}\n\n@NgModule({\n  bootstrap: [ AppComponent ],\n  declarations: [ AppComponent ],\n  imports: [ BrowserModule, SampleModule ]\n})\nclass AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app'},{'name': 'SampleComponent', 'selector': 'sample-component'}];\n    var DIRECTIVES = [{'name': 'SampleDirective', 'selector': '[sampleDirective]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nSampleModule\n\nSampleModule\n\nAppModule -->\n\nSampleModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            playground/index.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SampleModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /**\n * This is only for local test\n */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { SampleModule }  from 'ng2-jsgrid';\n\n@Component({\n  selector: 'app',\n  template: ``\n})\nclass AppComponent {}\n\n@NgModule({\n  bootstrap: [ AppComponent ],\n  declarations: [ AppComponent ],\n  imports: [ BrowserModule, SampleModule ]\n})\nclass AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SampleComponent.html":{"url":"components/SampleComponent.html","title":"component - SampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SampleComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/sample.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sample-component\n            \n\n\n\n            \n                template\n                Sample component\n            \n\n\n\n        \n    \n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in src/sample.component.ts:7\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'sample-component',\n  template: `Sample component`\n})\nexport class SampleComponent {\n\n  constructor() {\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sample component'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app'},{'name': 'SampleComponent', 'selector': 'sample-component'}];\n    var DIRECTIVES = [{'name': 'SampleDirective', 'selector': '[sampleDirective]'}];\n    var ACTUAL_COMPONENT = {'name': 'SampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SampleDirective.html":{"url":"directives/SampleDirective.html","title":"directive - SampleDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  SampleDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/sample.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [sampleDirective]\n                    \n\n                \n            \n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(el: ElementRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/sample.directive.ts:6\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                el\n                                                              \n                                                                    \n                                                                                ElementRef\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[sampleDirective]'\n})\nexport class SampleDirective {\n\n  constructor(private el: ElementRef) {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SampleModule.html":{"url":"modules/SampleModule.html","title":"module - SampleModule","body":"\n                   \n\n\n\n\n  Modules\n  SampleModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SampleModule\n\n\n\ncluster_SampleModule_declarations\n\n\n\ncluster_SampleModule_exports\n\n\n\n\nSampleComponent\n\nSampleComponent\n\n\n\nSampleModule\n\nSampleModule\n\nSampleModule -->\n\nSampleComponent->SampleModule\n\n\n\n\n\nSampleDirective\n\nSampleDirective\n\nSampleModule -->\n\nSampleDirective->SampleModule\n\n\n\n\n\nSampleComponent \n\nSampleComponent \n\nSampleComponent  -->\n\nSampleModule->SampleComponent \n\n\n\n\n\nSampleDirective \n\nSampleDirective \n\nSampleDirective  -->\n\nSampleModule->SampleDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/index.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SampleComponent\n                            \n                            \n                                SampleDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    SampleComponent\n                            \n                            \n                                    SampleDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SampleComponent } from './sample.component';\nimport { SampleDirective } from './sample.directive';\nimport { SamplePipe } from './sample.pipe';\nimport { SampleService } from './sample.service';\n\nexport * from './sample.component';\nexport * from './sample.directive';\nexport * from './sample.pipe';\nexport * from './sample.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SampleComponent,\n    SampleDirective,\n    SamplePipe\n  ],\n  exports: [\n    SampleComponent,\n    SampleDirective,\n    SamplePipe\n  ]\n})\nexport class SampleModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SampleModule,\n      providers: [SampleService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SamplePipe.html":{"url":"injectables/SamplePipe.html","title":"injectable - SamplePipe","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SamplePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/sample.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transforms any input value\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        transform\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            Object()\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(value: any, args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/sample.pipe.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                                Default value\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                                    \n                                                                    \n            \n                                                            \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                any[]\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                                    \n                                                                            null\n                                                                    \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Pipe } from '@angular/core';\n\n/**\n * Transforms any input value\n */\n@Pipe({\n  name: 'samplePipe'\n})\n@Injectable()\nexport class SamplePipe implements PipeTransform {\n  transform(value: any, args: any[] = null): string {\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SamplePipe-1.html":{"url":"injectables/SamplePipe-1.html","title":"injectable - SamplePipe-1","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SamplePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/sample.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transforms any input value\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        transform\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            Object()\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(value: any, args: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/sample.pipe.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                                Default value\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                                    \n                                                                    \n            \n                                                            \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                any[]\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                                    \n                                                                            null\n                                                                    \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, Pipe } from '@angular/core';\n\n/**\n * Transforms any input value\n */\n@Pipe({\n  name: 'samplePipe'\n})\n@Injectable()\nexport class SamplePipe implements PipeTransform {\n  transform(value: any, args: any[] = null): string {\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SampleService.html":{"url":"injectables/SampleService.html","title":"injectable - SampleService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SampleService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/sample.service.ts\n        \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/sample.service.ts:4\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SampleService {\n\n  constructor() {\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    playground/index.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/jest-global-mocks.ts\n            \n            \n                variable\n            \n            \n                mock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/sample.component.ts\n            \n            \n                component\n            \n            \n                SampleComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/sample.directive.ts\n            \n            \n                directive\n            \n            \n                SampleDirective\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/sample.pipe.ts\n            \n            \n                injectable\n            \n            \n                SamplePipe\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/sample.pipe.ts\n            \n            \n                injectable\n            \n            \n                SamplePipe\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/sample.service.ts\n            \n            \n                injectable\n            \n            \n                SampleService\n            \n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nng2-jsgrid\nInstallation\nTo install this library, run:\n$ npm install ng2-jsgrid --saveConsuming your library\nOnce you have published your library to npm, you can import your library in any Angular application by running:\n$ npm install ng2-jsgridand then from your Angular AppModule:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import your library\nimport { SampleModule } from 'ng2-jsgrid';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    // Specify your library as an import\n    LibraryModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Once your library is imported, you can use its components, directives and pipes in your Angular application:\n\n\n  {{title}}\n\nDevelopment\nTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo lint all *.ts files:\n$ npm run lintLicense\nMIT © jinhduong\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SampleModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_SampleModule\n\n\n\ncluster_SampleModule_declarations\n\n\n\ncluster_SampleModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nSampleModule\n\nSampleModule\n\nAppModule -->\n\nSampleModule->AppModule\n\n\n\n\n\nSampleComponent \n\nSampleComponent \n\nSampleComponent  -->\n\nSampleModule->SampleComponent \n\n\n\n\n\nSampleDirective \n\nSampleDirective \n\nSampleDirective  -->\n\nSampleModule->SampleDirective \n\n\n\n\n\nSampleComponent\n\nSampleComponent\n\nSampleModule -->\n\nSampleComponent->SampleModule\n\n\n\n\n\nSampleDirective\n\nSampleDirective\n\nSampleModule -->\n\nSampleDirective->SampleModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 injectables\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            mock   (src/.../jest-global-mocks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/jest-global-mocks.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                mock\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            mock:     \n    \n                        \n                    \n                        \n                            \n                                Default value : () => {\n      let storage = {};\n      return {\n        getItem: key => key in storage ? storage[key] : null,\n        setItem: (key, value) => storage[key] = value || '',\n        removeItem: key => delete storage[key],\n        clear: () => storage = {},\n      };\n    }\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
